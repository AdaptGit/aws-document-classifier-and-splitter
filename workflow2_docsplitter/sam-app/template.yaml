Transform: 'AWS::Serverless-2016-10-31'

Description: SAM template for docsplitter

Resources:
  PDFBucket:
    Type: 'AWS::S3::Bucket'
  DocSplitterFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Description: Splits input PDF based on each page's class; Triggerred when a PDF is uploaded to the S3 Bucket created by the same SAM stack
      Role: !GetAtt DocSplitterRole.Arn
      Timeout: 900
      MemorySize: 512
      PackageType: Image
      ImageConfig:
        Command: [ "index.lambda_handler" ]
      Events:
          S3Trigger:
            Type: S3
            Properties:
              Bucket: !Ref PDFBucket
              Events: s3:ObjectCreated:*
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: functions/docsplitter_function/
      DockerTag: v2
  DocSplitterRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Role executes Lambda functions
      MaxSessionDuration: 43200
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 'textract:*'
                  - 'lambda:*'
                  - 'comprehend:*'
                  - 'logs:*'
                Resource: '*'
Outputs:
  S3Bucket:
    Description: Name of the S3Bucket
    Value: !Ref PDFBucket
